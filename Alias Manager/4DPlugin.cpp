/* --------------------------------------------------------------------------------
 #
 #	4DPlugin.cpp
 #	source generated by 4D Plugin Wizard
 #	Project : Alias Manager
 #	author : miyako
 #	2014/11/12
 #
 # --------------------------------------------------------------------------------*/


#include "4DPluginAPI.h"
#include "4DPlugin.h"

void PluginMain(PA_long32 selector, PA_PluginParameters params)
{
	try
	{
		PA_long32 pProcNum = selector;
		sLONG_PTR *pResult = (sLONG_PTR *)params->fResult;
		PackagePtr pParams = (PackagePtr)params->fParameters;

		CommandDispatcher(pProcNum, pResult, pParams); 
	}
	catch(...)
	{

	}
}

void CommandDispatcher (PA_long32 pProcNum, sLONG_PTR *pResult, PackagePtr pParams)
{
	switch(pProcNum)
	{
// --- Alias

		case 1 :
			AM_Create_link(pResult, pParams);
			break;

	}
}

// ------------------------------------- Alias ------------------------------------


void AM_Create_link(sLONG_PTR *pResult, PackagePtr pParams)
{
    C_TEXT Param1;
    C_TEXT Param2;
    C_LONGINT Param3;
    C_LONGINT returnValue;
    
    Param1.fromParamAtIndex(pParams, 1);
    Param2.fromParamAtIndex(pParams, 2);
    Param3.fromParamAtIndex(pParams, 3);
    
    NSFileManager *defaultFileManager = [NSFileManager defaultManager];
    
    NSURL *srcUrl = Param1.copyUrl();
    if(srcUrl){
        NSURL *dstUrl = Param2.copyUrl();
        if(dstUrl){
            
            switch(Param3.getIntValue()){
                case LinkSymbolic:
                    returnValue.setIntValue([defaultFileManager createSymbolicLinkAtURL:dstUrl withDestinationURL:srcUrl error:nil]);
                    break;
                case LinkHard:
                    returnValue.setIntValue([defaultFileManager linkItemAtURL:srcUrl toURL:dstUrl error:nil]);
                    break;   
                case LinkAlias:                      
                    NSData *bookmark = [srcUrl 
                                        bookmarkDataWithOptions:NSURLBookmarkCreationSuitableForBookmarkFile
                                        includingResourceValuesForKeys:[NSArray array] 
                                        relativeToURL:nil
                                        error:nil];
                    
                    if(bookmark){
                        
                        returnValue.setIntValue([NSURL 
                                                 writeBookmarkData:bookmark 
                                                 toURL:dstUrl 
                                                 options:NSURLBookmarkCreationSuitableForBookmarkFile
                                                 error:nil]);                 
                    }
                    
                    break;  
                    
            }
            [dstUrl release];
        }
        
        [srcUrl release];
    }
    
    returnValue.setReturn(pResult);
}
